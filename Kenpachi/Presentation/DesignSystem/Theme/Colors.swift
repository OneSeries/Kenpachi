// Colors.swift
// Centralized color definitions for the app theme
// Supports both light and dark mode with semantic color naming
// Note: Color assets are auto-generated by Xcode from Assets.xcassets

import SwiftUI

/// Extension providing app-specific color utilities and gradients
extension Color {

  // MARK: - Color Assets (Auto-generated by Xcode)
  // The following colors are defined in Assets.xcassets/Colors/
  // and are automatically available as Color properties:
  //
  // - Color.primaryBlue
  // - Color.accentColor
  // - Color.appBackground
  // - Color.cardBackground
  // - Color.surfaceBackground
  // - Color.textPrimary
  // - Color.textSecondary
  // - Color.textTertiary
  // - Color.separator
  // - Color.border

  // MARK: - UI Element Colors
  /// Overlay/scrim color for modals
  static let overlay = Color.black.opacity(0.6)

  // MARK: - Status Colors
  /// Success state color
  static let success = Color.green
  /// Error state color
  static let error = Color.red
  /// Warning state color
  static let warning = Color.orange
  /// Info state color
  static let info = Color.blue

  // MARK: - Gradient Colors
  /// Gradient for hero sections
  static let heroGradient = LinearGradient(
    colors: [.clear, .black.opacity(0.8)],
    startPoint: .top,
    endPoint: .bottom
  )

  /// Gradient for card overlays
  static let cardGradient = LinearGradient(
    colors: [.clear, .black.opacity(0.6)],
    startPoint: .center,
    endPoint: .bottom
  )
}
